#!/system/bin/sh
# SPDX-License-Identifier: GPL-2.0-or-later
# cxroot - chroot into a Linux rootfs. For Android devices that have been rooted, be it using Magisk or other methods.
# https://github.com/nggit/cxroot
# Copyright (c) 2021 nggit.

if [ "$( id -u )" -ne 0 ]; then
    echo "Please use root." 1>&2
    exit 1
fi

if [ $# -ne 1 ]; then
    printf "Usage: %s ROOTFS_DIR\n" "$0" 1>&2
    exit 1
fi

if [ "${1%"${1#?}"}" = '/' ] && [ -d "$1" ]; then
    ROOTFS=$1
elif [ -d "$( pwd )/$1" ]; then
    ROOTFS=$( pwd )/$1
elif [ -d "/data/rootfs/$1" ]; then
    ROOTFS=/data/rootfs/$1
else
    printf "%s doesn't exist or not a directory. Exiting...\n" "$1" 1>&2
    exit 1
fi

# text_exists PATTERN FILE
# Check if a text exists within a FILE
text_exists() {
    # we don't use grep with -q option here for portability
    # redirect it to /dev/null instead
    grep -s "$1" "$2" > /dev/null
}

# Fix internet
text_exists "^inet:x:3003:" "$ROOTFS/etc/group" || echo "inet:x:3003:root" >> "$ROOTFS/etc/group"

# Fix _apt group for Debian and its derivatives
if text_exists "^_apt:x:100:65534:" "$ROOTFS/etc/passwd"; then
    rm -f "$ROOTFS/etc/passwd.bak"
    mv -f "$ROOTFS/etc/passwd" "$ROOTFS/etc/passwd.bak" \
        && grep -v "^_apt:x:100:65534:" "$ROOTFS/etc/passwd.bak" > "$ROOTFS/etc/passwd" \
        && echo "_apt:x:100:3003::/nonexistent:/bin/false" >> "$ROOTFS/etc/passwd"
fi

# Copy /etc/resolv.conf
cp -f /etc/resolv.conf "$ROOTFS/etc/resolv.conf"

# Mount virtual Kernel file systems and chroot.
mount -o bind /dev "$ROOTFS/dev"
mount -t proc proc "$ROOTFS/proc"
mount -t sysfs sysfs "$ROOTFS/sys"

printf "Chrooting into %s...\n" "$ROOTFS"
chroot "$ROOTFS" /bin/su -

# Unmount virtual Kernel file systems on exit.
umount "$ROOTFS/dev"
umount "$ROOTFS/proc"
umount "$ROOTFS/sys"

printf "Exiting %s chroot environment...\n" "$ROOTFS"
